{"version":3,"sources":["component/Footer.js","component/About.js","component/Home.js","App.js","serviceWorker.js","index.js","image/sajak-senja-icon.png"],"names":["Links","className","href","target","About","id","Component","Home","size","src","image","React","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"wQAaeA,EATD,kBACZ,yBAAKC,UAAU,iBACb,uBAAGC,KAAK,mDAAmDC,OAAO,SAAQ,kBAAC,IAAD,OAC1E,uBAAGD,KAAK,4CAA4CC,OAAO,SAAQ,kBAAC,IAAD,OACnE,uBAAGD,KAAK,mCAAkC,kBAAC,IAAD,OAC1C,uBAAGA,KAAK,+DAA+DC,OAAO,SAAQ,kBAAC,IAAD,SC2C3EC,E,iLA9CP,OAAQ,yBAAKH,UAAU,iBACX,mDACA,yBAAKI,GAAG,uBACR,uBAAGJ,UAAU,KAAb,wYACA,uBAAGA,UAAU,KAAb,2QACA,uBAAGA,UAAU,KAAb,mEACA,uBAAGA,UAAU,KAAI,gDACjB,uBAAGA,UAAU,KAAb,qmBAGA,uBAAGA,UAAU,KAAI,gDACjB,uBAAGA,UAAU,KAAb,0ZAGA,uBAAGA,UAAU,KAAI,gDACjB,uBAAGA,UAAU,KAAb,0aAGA,uBAAGA,UAAU,KAAI,6DACjB,uBAAGA,UAAU,KAAb,icAGA,uBAAGA,UAAU,KAAI,sDACjB,uBAAGA,UAAU,KAAb,yXAGA,uBAAGA,UAAU,KAAI,8CACjB,uBAAGA,UAAU,KAAb,meAGA,uBAAGA,UAAU,KAAI,6CACjB,uBAAGA,UAAU,KAAb,6VAGA,uBAAGA,UAAU,KAAI,6CACjB,uBAAGA,UAAU,KAAb,sTAGA,uBAAGA,UAAU,KAAb,mQ,GAzCAK,a,iBCqBLC,E,iLAdX,OAAO,6BACC,yBAAKN,UAAU,WACb,kBAAC,IAAD,CAAQO,KAAM,IAAKC,IAAKC,MACxB,wBAAIT,UAAU,SAAd,eACA,wBAAIA,UAAU,eAAd,+CAEF,kBAAC,EAAD,MACA,kBAAC,IAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,W,GAXOU,IAAML,WCQVM,E,iLARX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAaR,S,GAL7BD,aCOEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,wCEnInBC,EAAOC,QAAU,IAA0B,8C","file":"static/js/main.7e1547e5.chunk.js","sourcesContent":["import React from 'react';\nimport '../index';\nimport { IoLogoInstagram, IoMdMail, IoLogoWhatsapp, IoLogoAndroid } from \"react-icons/io\";\n\nconst Links = () => (\n  <div className=\"bottom-layout\">\n    <a href=\"https://chat.whatsapp.com/KLBaI4SmMnQ7A88kKwwBRk\" target=\"black\"><IoLogoWhatsapp/></a>\n    <a href=\"https://www.instagram.com/sajaksenja_2019\" target=\"blank\"><IoLogoInstagram/></a>\n    <a href=\"mailto:pecintasenja17@gmail.com\"><IoMdMail/></a>\n    <a href=\"https://play.google.com/store/apps/details?id=com.sajaksenja\" target=\"blank\"><IoLogoAndroid/></a>\n  </div>\n);\n\nexport default Links;\n","import React, {Component} from 'react';\nimport '../index.css';\n\nclass About extends Component {\n\n    render (){\n        return (<div className='content-about'>\n                    <h1>Tentang Sajak Senja</h1>\n                    <div id='rounded-line-green'/>\n                    <p className='p'>Sajak Senja adalah aplikasi yang bertujuan untuk menampung karya-karya sajak berupa puisi, pantun, sajak singkat, ataupun sajak lainnya. Dibuat atas dasar kecintaan pada sastra dan keinginan untuk saling terhubung dengan para pecinta sastra lain di luar sana. Ingin saling bertukar tulisan dan terdokumentasi dengan baik, sehingga ketika ingin membaca kembali dengan mudah bisa dilakukan.</p>\n                    <p className='p'>Sajak Senja tidak dibangun oleh tim developer melainkan oleh rekan-rekan kontributor dan para penikmat sajak lainnya. Berkat dukungan, kritik, dan saran dari rekan-rekan semualah yang dapat membangun Sajak Senja ini agar lebih bermanfaat dalam dunia seni menulis.</p>\n                    <p className='p'>Beberapa fitur utama yang kami hadirkan adalah sebagai berikut:</p>\n                    <p className='p'><b>1. Menulis Sajak</b></p>\n                    <p className='p'>\n                        Fitur ini ditujukan kepada kontributor yang ingin menyumbang karya berupa tulisan ke Aplikasi Sajak Senja. Setiap karya yang dikirim ke Sajak Senja sepenuhnya adalah hak Kontributor dan Sajak Senja tidak akan mengklaim sebagai hak milik. Fitur ini murni kami hadirkan untuk rekan-rekan yang ingin mengabadikan tulisannya dan dapat dibaca oleh banyak penikmat sajak di luar sana. Kami selalu memantau setiap sajak yang ditulis dan akan menindak orang-orang yang tidak menyajikan karya dengan cara sopan (seperti menulis status-status galau, melakukan provokasi, dan hal-hal lain yang menyebabkan pertentangan).\n                    </p>\n                    <p className='p'><b>2. Membaca sajak</b></p>\n                    <p className='p'>\n                        Fitur ini ditujukan kepada para menikmat sajak yang berminat dalam membaca karya-karya, dan tidak sedikit dari mereka mulai menulis karya dan menjadi kontributor di Sajak Senja. Tentu saja kami tidak membatasi minat baca rekan-rekan semua dan tidak membatasi kontribusi rekan-rekan dalam membangun Sajak Senja. Namun kami dengan tegas akan memproses setiap orang yang melakukan pelanggaran sebagai pembaca.\n                    </p>\n                    <p className='p'><b>3. Diskusi Sajak</b></p>\n                    <p className='p'>\n                        Fitur ini kami sediakan untuk kita saling bertukar pikiran dan berdiskusi sesama kontributor sajak, dimaka kita dapat berkomentar pada sajak yang telah diterbitkan oleh penulis. Disana kita dapat berdiskusi tentang cerita, nilai, atau tata penulisan. Kami akan berusaha menjaga agar komentar yang dibuat tidak mengandung unsur-unsur sara dan menjatuhkan. Kritik sangat boleh, namun sesuai dengan etika yang baik dan benar.\n                    </p>\n                    <p className='p'><b>4. Ngobrol Bareng Kontributor</b></p>\n                    <p className='p'>\n                        Fitur ini kami sediakan untuk rekan-rekan pecinta sajak untuk bisa berkomunikasi secara pribadi dengan kontributor favorit mereka, hal ini juga dapat digunakan untuk request sajak dan yang lainnya. Kami menjaga diskusi Anda dengan baik, namun kami sangat tidak menyarankan untuk berkomunikasi hal-hal yang sifatnya sensitif seperti informasi rekening dan informasi pribadi lainnya. Setiap penipuan yang terjadi tidak menjadi tanggung jawab kami.\n                    </p>\n                    <p className='p'><b>5. Diikuti &amp; Mengikuti</b></p>\n                    <p className='p'>\n                        Fitur ini kami sediakan untuk meningkatkan komunikasi dengan kontributor favorit Anda. Anda dapat mendapatkan informasi aktivitas dari kontributor yang Anda ikuti dan Anda juga dapat dengan mudah melihat karya-karyanya. Fitur ini baru dapat digunakan untuk mengikuti kontributor Sajak, jika Anda ingin memiliki pengikut maka bergabunglah menjadi kontributor di Sajak Senja.\n                    </p>\n                    <p className='p'><b>6. Event Sajak</b></p>\n                    <p className='p'>\n                        Fitur ini kami hadirkan untuk rekan-rekan baik yang menjadi kontributor ataupun yang menjadi penulis untuk Anda dapat mengikuti event-event sajak yang kami hadirkan. Event yang kami hadirkan diantaranya adalah event menulis sajak, event menganalisa sajak, dan event mengomentari penulisan sajak. Hadiah yang diberikan juga bervariasi dan waktu pelaksanaan bisa tiap bulan, tiap minggu, atau pada hari-hari istimewa seperti hari raya, hari membaca, hari pendidikan, dan lain-lain.\n                    </p>\n                    <p className='p'><b>7. Poin Sajak</b></p>\n                    <p className='p'>\n                        Fitur ini akan kami hadirkan untuk rekan-rekan kontributor sebagai loyalty karena telah berkontribusi di Sajak Senja, untuk rekan-rekan yang sudah menulis puisi tentu saja akan di kalkulasikan berdasarkan jumlah puisi yang telah diterbitkan di Sajak Senja. Poin ini juga dapat diperoleh dari event, atau misi yang diberikan oleh tim Sajak Senja.\n                    </p>\n                    <p className='p'><b>8. Toko Sajak</b></p>\n                    <p className='p'>\n                        Fitur ini akan kami hadirkan untuk rekan-rekan kontributor yang telah memiliki poin atau rekan-rekan yang ingin membeli merchandise menggunakan poin sajak atau pesan melalui transfer. Pembelian melalui Aplikasi Sajak Senja adalah salah satu bentuk dukungan dari rekan-rekan untuk mengembangkan Sajak Senja.\n                    </p>\n                    <p className='p'>\n                        Kami menyadari bahwa aplikasi ini tidak luput dari kekurangan dan kesalahan, sehingga kami menyediakan layanan pertanyaan untuk rekan-rekan semua sehingga dapat memberikan kritik dan saran agar Sajak Senja dapat menjadi Aplikasi yang lebih baik lagi.\n                    </p>\n\n                </div>)\n    }\n}\n\nexport default About;","import React from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Divider, Avatar} from 'antd';\nimport Links from './Footer';\nimport About from './About';\nimport image from '../image/sajak-senja-icon.png'\n\nclass Home extends React.Component {\n  render() {\n    return <div>\n            <div className='content'>\n              <Avatar size={128} src={image} />\n              <h1 className=\"title\">Sajak Senja</h1>\n              <h3 className=\"description\">~ Cinta Sajak, Cinta Senja, Cinta Sastra ~</h3>\n            </div>\n            <Links/>\n            <Divider/>\n            <About/>\n            <Divider/>\n          </div>\n  }\n}\n\nexport default Home","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport Home from './component/Home'\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n            <Route exact path=\"/\" component = {Home} />\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/sajak-senja-icon.bf1589cd.png\";"],"sourceRoot":""}